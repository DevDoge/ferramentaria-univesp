// <auto-generated />
using System;
using Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Data.Migrations
{
    [DbContext(typeof(FerramentariaContext))]
    [Migration("20211103162628_SeedAdmin")]
    partial class SeedAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Models.Afericao", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataUltima")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FerramentaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IntervaloDias")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Afericoes");
                });

            modelBuilder.Entity("Domain.Models.Categoria", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Domain.Models.Colaborador", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("SupervisorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("SupervisorID");

                    b.ToTable("Colaboradores");

                    b.HasData(
                        new
                        {
                            ID = new Guid("c20cf935-802e-4dba-be10-14131ea6279a"),
                            Ativo = false,
                            CPF = "12345678912",
                            Cargo = "Admin",
                            CriadoEm = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CriadoPor = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "N/A",
                            Empresa = "N/A",
                            Matricula = "000",
                            Nome = "Admin",
                            Perfil = 1,
                            Sobrenome = "Admin",
                            Telefone = "(00)0000-0000"
                        });
                });

            modelBuilder.Entity("Domain.Models.Emprestimo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColaboradorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEmprestimo")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FerramentaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ColaboradorID");

                    b.HasIndex("FerramentaID");

                    b.ToTable("Emprestimos");
                });

            modelBuilder.Entity("Domain.Models.Ferramenta", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AfericaoID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroPatrimonial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("QuantidadeDisponivel")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeTotal")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("ValorCompra")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("AfericaoID")
                        .IsUnique()
                        .HasFilter("[AfericaoID] IS NOT NULL");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Ferramentas");
                });

            modelBuilder.Entity("Domain.Models.Reparo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FerramentaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("FerramentaID");

                    b.ToTable("Reparos");
                });

            modelBuilder.Entity("Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColaboradorID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Token")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("ID");

                    b.HasIndex("ColaboradorID")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            ID = new Guid("bb9ac2c8-c7d4-4c21-b6cf-84419b12a810"),
                            Ativo = true,
                            ColaboradorID = new Guid("c20cf935-802e-4dba-be10-14131ea6279a"),
                            CriadoEm = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CriadoPor = new Guid("00000000-0000-0000-0000-000000000000"),
                            Login = "12345678912",
                            Role = 1,
                            Senha = "$2a$12$ti.QT85lj9IANHP8VfAue.X4yzVM458OqmCtR0d1zBp9yv4mK2CGC"
                        });
                });

            modelBuilder.Entity("Domain.Models.VerificacaoEmprestimo", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AtualizadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CriadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaVerificacao")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("VerificacoesEmprestimos");

                    b.HasData(
                        new
                        {
                            ID = new Guid("091e796b-5819-4fe3-8d45-38c86cec4e3b"),
                            Ativo = true,
                            CriadoEm = new DateTime(2021, 11, 3, 16, 26, 27, 235, DateTimeKind.Utc).AddTicks(6595),
                            CriadoPor = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaVerificacao = new DateTime(2021, 11, 3, 16, 26, 27, 235, DateTimeKind.Utc).AddTicks(5056)
                        });
                });

            modelBuilder.Entity("Domain.Models.Colaborador", b =>
                {
                    b.HasOne("Domain.Models.Colaborador", "Supervisor")
                        .WithMany("Supervisionados")
                        .HasForeignKey("SupervisorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Domain.Models.Emprestimo", b =>
                {
                    b.HasOne("Domain.Models.Colaborador", "Colaborador")
                        .WithMany("Emprestimos")
                        .HasForeignKey("ColaboradorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Models.Ferramenta", "Ferramenta")
                        .WithMany("Emprestimos")
                        .HasForeignKey("FerramentaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Ferramenta");
                });

            modelBuilder.Entity("Domain.Models.Ferramenta", b =>
                {
                    b.HasOne("Domain.Models.Afericao", "Afericao")
                        .WithOne("Ferramenta")
                        .HasForeignKey("Domain.Models.Ferramenta", "AfericaoID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Domain.Models.Categoria", "Categoria")
                        .WithMany("Ferramentas")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Afericao");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Domain.Models.Reparo", b =>
                {
                    b.HasOne("Domain.Models.Ferramenta", "Ferramenta")
                        .WithMany("Reparos")
                        .HasForeignKey("FerramentaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ferramenta");
                });

            modelBuilder.Entity("Domain.Models.Usuario", b =>
                {
                    b.HasOne("Domain.Models.Colaborador", "Colaborador")
                        .WithOne("Usuario")
                        .HasForeignKey("Domain.Models.Usuario", "ColaboradorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("Domain.Models.Afericao", b =>
                {
                    b.Navigation("Ferramenta");
                });

            modelBuilder.Entity("Domain.Models.Categoria", b =>
                {
                    b.Navigation("Ferramentas");
                });

            modelBuilder.Entity("Domain.Models.Colaborador", b =>
                {
                    b.Navigation("Emprestimos");

                    b.Navigation("Supervisionados");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Models.Ferramenta", b =>
                {
                    b.Navigation("Emprestimos");

                    b.Navigation("Reparos");
                });
#pragma warning restore 612, 618
        }
    }
}
